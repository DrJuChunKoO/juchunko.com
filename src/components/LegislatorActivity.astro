---
import { useTranslations } from "@/i18n/utils";

type SupportedLang = "en" | "zh-TW";

interface BillActivity {
	id: string;
	title: string;
	status?: string;
	law?: string;
	updatedAt?: string;
	url?: string;
	meetingCode?: string;
}

interface MeetActivity {
	id: string;
	name: string;
	type?: string;
	date?: string;
	location?: string;
	url?: string;
	updatedAt?: string;
}

interface InterpellationActivity {
	id: string;
	title: string;
	date?: string;
	url?: string;
}

type LegislatorActivityProps = {
	lang: SupportedLang;
	limit?: number;
};

const { lang = "zh-TW", limit = 5 } = Astro.props as LegislatorActivityProps;
const t = useTranslations(lang);

const locale = lang === "en" ? "en-US" : "zh-TW";
const joinSeparator = lang === "en" ? ", " : "、";

const API_BASE = "https://ly.govapi.tw/v2";
const LEGISLATOR_TERM = 11;
const LEGISLATOR_NAME = "葛如鈞";
const encodedName = encodeURIComponent(LEGISLATOR_NAME);

const dateFormatter = new Intl.DateTimeFormat(locale, {
	year: "numeric",
	month: lang === "en" ? "short" : "2-digit",
	day: "2-digit",
});

const dateTimeFormatter = new Intl.DateTimeFormat(locale, {
	year: "numeric",
	month: lang === "en" ? "short" : "2-digit",
	day: "2-digit",
	hour: "2-digit",
	minute: "2-digit",
});

async function fetchJSON<T>(path: string): Promise<T | null> {
	const response = await fetch(`${API_BASE}${path}`, {
		method: "GET",
		headers: { accept: "application/json" },
		cache: "no-store",
	});

	if (!response.ok) {
		throw new Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`);
	}

	return (await response.json()) as T;
}

function asRecord(value: unknown): Record<string, unknown> | null {
	return value && typeof value === "object" ? (value as Record<string, unknown>) : null;
}

function pickFirstString(value: unknown): string | null {
	if (!value) return null;
	if (Array.isArray(value)) {
		const candidate = value.find((item) => typeof item === "string" && item.trim().length > 0);
		return candidate ? candidate : null;
	}
	return typeof value === "string" && value.trim().length > 0 ? value : null;
}

function joinValues(value: unknown): string {
	if (!value) return "";
	if (Array.isArray(value)) {
		return value
			.map((item) => (typeof item === "string" ? item.trim() : ""))
			.filter((item) => item.length > 0)
			.join(joinSeparator);
	}
	return typeof value === "string" ? value : "";
}

function normalizeRocDate(value: string): string | null {
	const match = value.match(/^(\d{2,3})年(\d{1,2})月(\d{1,2})日/);
	if (!match) return null;
	const year = Number.parseInt(match[1], 10) + 1911;
	const month = match[2].padStart(2, "0");
	const day = match[3].padStart(2, "0");
	return `${year}-${month}-${day}`;
}

function parseToDate(value?: string | null): Date | null {
	if (!value) return null;
	const trimmed = value.trim();
	if (!trimmed) return null;

	const roc = normalizeRocDate(trimmed);
	if (roc) {
		const parsedRoc = Date.parse(roc);
		if (!Number.isNaN(parsedRoc)) {
			return new Date(parsedRoc);
		}
	}

	const normalized = trimmed.replace(/\//g, "-");
	const parsed = Date.parse(normalized);
	if (!Number.isNaN(parsed)) {
		return new Date(parsed);
	}

	return null;
}

function formatDate(value?: string | null): string {
	const parsed = parseToDate(value);
	if (parsed) {
		return dateFormatter.format(parsed);
	}
	return value ?? "";
}

function formatDateTime(value?: string | null): string {
	const parsed = parseToDate(value);
	if (parsed) {
		return dateTimeFormatter.format(parsed);
	}
	return value ?? "";
}

function mapBillActivity(entry: Record<string, unknown>): BillActivity | null {
	const id = typeof entry["議案編號"] === "string" ? entry["議案編號"] : undefined;
	if (!id) return null;

	const title = (typeof entry["議案名稱"] === "string" && entry["議案名稱"]) || id;

	const status = typeof entry["議案狀態"] === "string" ? entry["議案狀態"] : undefined;
	const law = joinValues(entry["法律編號:str"]) || joinValues(entry["法律編號"]) || undefined;
	const updatedAt =
		(typeof entry["最新進度日期"] === "string" && entry["最新進度日期"]) ||
		(typeof entry["資料抓取時間"] === "string" && entry["資料抓取時間"]) ||
		undefined;
	const meetingCode = typeof entry["會議代碼"] === "string" ? entry["會議代碼"] : undefined;

	let url: string | undefined;
	if (typeof entry["url"] === "string") {
		url = entry["url"];
	} else if (Array.isArray(entry["相關附件"])) {
		const attachments = entry["相關附件"]
			.map(asRecord)
			.filter((record): record is Record<string, unknown> => !!record);
		const attachmentRecord = attachments.find((record) => typeof record["網址"] === "string");
		if (attachmentRecord) {
			url = attachmentRecord["網址"] as string;
		}
	}

	return {
		id,
		title,
		status,
		law,
		updatedAt,
		url,
		meetingCode,
	};
}

function mapMeetActivity(entry: Record<string, unknown>): MeetActivity | null {
	const id = typeof entry["會議代碼"] === "string" ? entry["會議代碼"] : undefined;
	if (!id) return null;

	const name =
		(typeof entry["標題"] === "string" && entry["標題"]) ||
		(typeof entry["會議標題"] === "string" && entry["會議標題"]) ||
		(typeof entry["name"] === "string" && entry["name"]) ||
		id;

	const type = typeof entry["會議種類"] === "string" ? entry["會議種類"] : undefined;
	let date = pickFirstString(entry["日期"]);

	const meetingRecords = Array.isArray(entry["會議資料"])
		? entry["會議資料"].map(asRecord).filter((record): record is Record<string, unknown> => !!record)
		: [];

	if (!date && meetingRecords.length > 0) {
		const firstRecord = meetingRecords[0];
		date =
			pickFirstString(firstRecord["日期"]) ||
			(typeof firstRecord["日期"] === "string" ? (firstRecord["日期"] as string) : null);
	}

	const location = typeof entry["地點"] === "string" ? entry["地點"] : undefined;

	let url: string | undefined;
	if (Array.isArray(entry["連結"])) {
		const links = entry["連結"].map(asRecord).filter((record): record is Record<string, unknown> => !!record);
		const meetingLink = links.find((link) => typeof link["連結"] === "string" && (!link["類型"] || link["類型"] === "video"));
		if (meetingLink) {
			url = meetingLink["連結"] as string;
		}
	}
	if (!url && meetingRecords.length > 0) {
		const ppgLink = meetingRecords.find((record) => typeof record["ppg_url"] === "string");
		if (ppgLink) {
			url = ppgLink["ppg_url"] as string;
		}
	}

	const updatedAt =
		(typeof entry["資料抓取時間"] === "string" && entry["資料抓取時間"]) || undefined;

	return {
		id,
		name,
		type,
		date: date ?? undefined,
		location,
		url,
		updatedAt,
	};
}

function mapInterpellationActivity(entry: Record<string, unknown>): InterpellationActivity | null {
	const id =
		(typeof entry["質詢編號"] === "string" && entry["質詢編號"]) ||
		(typeof entry["會議代碼"] === "string" && entry["會議代碼"]) ||
		null;
	if (!id) return null;

	const title =
		(typeof entry["標題"] === "string" && entry["標題"]) ||
		(typeof entry["發言主題"] === "string" && entry["發言主題"]) ||
		id;

	const date =
		(typeof entry["質詢日期"] === "string" && entry["質詢日期"]) ||
		(typeof entry["日期"] === "string" && entry["日期"]) ||
		pickFirstString(entry["日期"]) ||
		undefined;

	let url: string | undefined;
	if (typeof entry["url"] === "string") {
		url = entry["url"];
	} else if (Array.isArray(entry["連結"])) {
		const links = entry["連結"].map(asRecord).filter((record): record is Record<string, unknown> => !!record);
		const target = links.find((link) => typeof link["連結"] === "string");
		if (target) {
			url = target["連結"] as string;
		}
	}

	return {
		id,
		title,
		date,
		url,
	};
}

type BillsResponse = {
	bills?: Record<string, unknown>[];
};

type MeetsResponse = {
	meets?: Record<string, unknown>[];
};

type InterpellationsResponse = {
	interpellations?: Record<string, unknown>[];
};

const safeLimit = Number.isFinite(limit) ? Math.max(1, Math.min(20, Math.floor(limit))) : 5;

let proposeBills: BillActivity[] = [];
let cosignBills: BillActivity[] = [];
let meetList: MeetActivity[] = [];
let interpellationList: InterpellationActivity[] = [];
let fetchError = false;

try {
	const [proposeRes, cosignRes, meetsRes, interpellationsRes] = await Promise.all([
		fetchJSON<BillsResponse>(`/legislators/${LEGISLATOR_TERM}/${encodedName}/propose_bills?limit=${safeLimit}`),
		fetchJSON<BillsResponse>(`/legislators/${LEGISLATOR_TERM}/${encodedName}/cosign_bills?limit=${safeLimit}`),
		fetchJSON<MeetsResponse>(`/legislators/${LEGISLATOR_TERM}/${encodedName}/meets?limit=${safeLimit}`),
		fetchJSON<InterpellationsResponse>(`/legislators/${LEGISLATOR_TERM}/${encodedName}/interpellations?limit=${safeLimit}`),
	]);

	proposeBills =
		proposeRes?.bills?.map((entry) => mapBillActivity(entry)).filter((item): item is BillActivity => !!item).slice(0, safeLimit) ?? [];
	cosignBills =
		cosignRes?.bills?.map((entry) => mapBillActivity(entry)).filter((item): item is BillActivity => !!item).slice(0, safeLimit) ?? [];
	meetList =
		meetsRes?.meets?.map((entry) => mapMeetActivity(entry)).filter((item): item is MeetActivity => !!item).slice(0, safeLimit) ?? [];
	interpellationList =
		interpellationsRes?.interpellations
			?.map((entry) => mapInterpellationActivity(entry))
			.filter((item): item is InterpellationActivity => !!item)
			.slice(0, safeLimit) ?? [];
} catch (error) {
	console.error("Failed to fetch legislator activity:", error);
	fetchError = true;
}

const timestamps = [
	...proposeBills.map((item) => item.updatedAt),
	...cosignBills.map((item) => item.updatedAt),
	...meetList.map((item) => item.updatedAt),
].filter((value): value is string => typeof value === "string" && value.length > 0);

const lastUpdatedRaw = timestamps.sort((a, b) => (a > b ? 1 : -1)).at(-1) ?? null;
const lastUpdatedLabel = lastUpdatedRaw ? formatDateTime(lastUpdatedRaw) : null;

const hasData =
	proposeBills.length > 0 ||
	cosignBills.length > 0 ||
	meetList.length > 0 ||
	interpellationList.length > 0;
---

<section class="mt-8 rounded-xl border border-slate-200 bg-white p-6 shadow-sm dark:border-slate-800 dark:bg-slate-900/40">
	<header class="flex flex-col gap-2 md:flex-row md:items-center md:justify-between">
		<div>
			<h2 class="text-xl font-semibold text-slate-900 dark:text-white">{t("home.legislatorActivity.title")}</h2>
			<p class="text-sm text-slate-600 dark:text-slate-300">{t("home.legislatorActivity.subtitle")}</p>
		</div>
		{lastUpdatedLabel && (
			<p class="text-xs text-slate-500 dark:text-slate-400">
				{t("home.legislatorActivity.updated")}: {lastUpdatedLabel}
			</p>
		)}
	</header>

	{fetchError ? (
		<p class="mt-6 rounded-lg border border-red-300 bg-red-50 px-4 py-3 text-sm text-red-700 dark:border-red-800 dark:bg-red-900/30 dark:text-red-200">
			{t("home.legislatorActivity.fetchError")}
		</p>
	) : !hasData ? (
		<p class="mt-6 rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-sm text-slate-600 dark:border-slate-700 dark:bg-slate-800/60 dark:text-slate-300">
			{t("home.legislatorActivity.empty")}
		</p>
	) : (
		<div class="mt-6 space-y-8">
			<!-- 提案 -->
			<section class="flex flex-col gap-3">
				<h3 class="text-lg font-semibold text-slate-800 dark:text-slate-100">
					{t("home.legislatorActivity.section.propose")}
				</h3>
				{proposeBills.length > 0 ? (
					<div class="relative" data-la-root>
						<!-- 漸層邊緣提示可水平捲動 -->
						<div class="pointer-events-none absolute inset-y-0 left-0 w-10 bg-gradient-to-r from-white/90 to-transparent dark:from-slate-900/70"></div>
						<div class="pointer-events-none absolute inset-y-0 right-0 w-10 bg-gradient-to-l from-white/90 to-transparent dark:from-slate-900/70"></div>

						<div class="flex gap-2 md:gap-4 overflow-x-auto py-4 -my-4 scroll-smooth snap-x snap-mandatory" data-scroller>
							{proposeBills.map((bill) => (
								bill.url ? (
									<a
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent hover:border-primary/25 group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 transition-all hover:-translate-y-1 hover:shadow-lg md:p-4 dark:hover:translate-0"
										target="_blank"
										rel="noopener noreferrer"
										href={bill.url}
										data-id={bill.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{bill.title}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{bill.updatedAt ? formatDate(bill.updatedAt) : ""}
											</p>
											{bill.status && (
												<p class="mt-2 line-clamp-2 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.billStatus")}: {bill.status}
												</p>
											)}
											{bill.law && (
												<p class="mt-1 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.law")}: {bill.law}
												</p>
											)}
										</article>
									</a>
								) : (
									<div
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 md:p-4"
										data-id={bill.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{bill.title}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{bill.updatedAt ? formatDate(bill.updatedAt) : ""}
											</p>
											{bill.status && (
												<p class="mt-2 line-clamp-2 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.billStatus")}: {bill.status}
												</p>
											)}
											{bill.law && (
												<p class="mt-1 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.law")}: {bill.law}
												</p>
											)}
										</article>
									</div>
								)
							))}
						</div>

						<!-- 控制按鈕 -->
						<div class="absolute bottom-2 left-4 z-10">
							<div class="flex items-center gap-1 rounded-full bg-white/90 px-1.5 py-1 shadow-lg ring-1 ring-black/10 backdrop-blur dark:bg-slate-800/70">
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-left
									aria-label={t("post.prev")}
								>
									<span aria-hidden="true">←</span>
								</button>
								<div class="h-6 w-px bg-slate-300/70 dark:bg-slate-600/60" aria-hidden="true"></div>
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-right
									aria-label={t("post.next")}
								>
									<span aria-hidden="true">→</span>
								</button>
							</div>
						</div>
					</div>
				) : (
					<p class="rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-xs text-slate-600 dark:border-slate-800 dark:bg-slate-900/60 dark:text-slate-300">
						{t("home.legislatorActivity.empty")}
					</p>
				)}
			</section>

			<!-- 連署 -->
			<section class="flex flex-col gap-3">
				<h3 class="text-lg font-semibold text-slate-800 dark:text-slate-100">
					{t("home.legislatorActivity.section.cosign")}
				</h3>
				{cosignBills.length > 0 ? (
					<div class="relative" data-la-root>
						<div class="pointer-events-none absolute inset-y-0 left-0 w-10 bg-gradient-to-r from-white/90 to-transparent dark:from-slate-900/70"></div>
						<div class="pointer-events-none absolute inset-y-0 right-0 w-10 bg-gradient-to-l from-white/90 to-transparent dark:from-slate-900/70"></div>

						<div class="flex gap-2 md:gap-4 overflow-x-auto py-4 -my-4 scroll-smooth snap-x snap-mandatory" data-scroller>
							{cosignBills.map((bill) => (
								bill.url ? (
									<a
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent hover:border-primary/25 group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 transition-all hover:-translate-y-1 hover:shadow-lg md:p-4 dark:hover:translate-0"
										target="_blank"
										rel="noopener noreferrer"
										href={bill.url}
										data-id={bill.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{bill.title}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{bill.updatedAt ? formatDate(bill.updatedAt) : ""}
											</p>
											{bill.status && (
												<p class="mt-2 line-clamp-2 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.billStatus")}: {bill.status}
												</p>
											)}
											{bill.law && (
												<p class="mt-1 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.law")}: {bill.law}
												</p>
											)}
										</article>
									</a>
								) : (
									<div
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 md:p-4"
										data-id={bill.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{bill.title}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{bill.updatedAt ? formatDate(bill.updatedAt) : ""}
											</p>
											{bill.status && (
												<p class="mt-2 line-clamp-2 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.billStatus")}: {bill.status}
												</p>
											)}
											{bill.law && (
												<p class="mt-1 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.law")}: {bill.law}
												</p>
											)}
										</article>
									</div>
								)
							))}
						</div>

						<div class="absolute bottom-2 left-4 z-10">
							<div class="flex items-center gap-1 rounded-full bg-white/90 px-1.5 py-1 shadow-lg ring-1 ring-black/10 backdrop-blur dark:bg-slate-800/70">
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-left
									aria-label={t("post.prev")}
								>
									<span aria-hidden="true">←</span>
								</button>
								<div class="h-6 w-px bg-slate-300/70 dark:bg-slate-600/60" aria-hidden="true"></div>
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-right
									aria-label={t("post.next")}
								>
									<span aria-hidden="true">→</span>
								</button>
							</div>
						</div>
					</div>
				) : (
					<p class="rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-xs text-slate-600 dark:border-slate-800 dark:bg-slate-900/60 dark:text-slate-300">
						{t("home.legislatorActivity.empty")}
					</p>
				)}
			</section>

			<!-- 會議 -->
			<section class="flex flex-col gap-3">
				<h3 class="text-lg font-semibold text-slate-800 dark:text-slate-100">
					{t("home.legislatorActivity.section.meets")}
				</h3>
				{meetList.length > 0 ? (
					<div class="relative" data-la-root>
						<div class="pointer-events-none absolute inset-y-0 left-0 w-10 bg-gradient-to-r from-white/90 to-transparent dark:from-slate-900/70"></div>
						<div class="pointer-events-none absolute inset-y-0 right-0 w-10 bg-gradient-to-l from-white/90 to-transparent dark:from-slate-900/70"></div>

						<div class="flex gap-2 md:gap-4 overflow-x-auto py-4 -my-4 scroll-smooth snap-x snap-mandatory" data-scroller>
							{meetList.map((meet) => (
								meet.url ? (
									<a
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent hover:border-primary/25 group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 transition-all hover:-translate-y-1 hover:shadow-lg md:p-4 dark:hover:translate-0"
										target="_blank"
										rel="noopener noreferrer"
										href={meet.url}
										data-id={meet.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{meet.name}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{meet.date ? formatDate(meet.date) : ""}
											</p>
											{meet.type && (
												<p class="mt-2 line-clamp-2 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.meetingType")}: {meet.type}
												</p>
											)}
											{meet.location && (
												<p class="mt-1 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.location")}: {meet.location}
												</p>
											)}
										</article>
									</a>
								) : (
									<div
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 md:p-4"
										data-id={meet.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{meet.name}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{meet.date ? formatDate(meet.date) : ""}
											</p>
											{meet.type && (
												<p class="mt-2 line-clamp-2 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.meetingType")}: {meet.type}
												</p>
											)}
											{meet.location && (
												<p class="mt-1 text-xs text-slate-600 dark:text-slate-300">
													{t("home.legislatorActivity.location")}: {meet.location}
												</p>
											)}
										</article>
									</div>
								)
							))}
						</div>

						<div class="absolute bottom-2 left-4 z-10">
							<div class="flex items-center gap-1 rounded-full bg-white/90 px-1.5 py-1 shadow-lg ring-1 ring-black/10 backdrop-blur dark:bg-slate-800/70">
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-left
									aria-label={t("post.prev")}
								>
									<span aria-hidden="true">←</span>
								</button>
								<div class="h-6 w-px bg-slate-300/70 dark:bg-slate-600/60" aria-hidden="true"></div>
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-right
									aria-label={t("post.next")}
								>
									<span aria-hidden="true">→</span>
								</button>
							</div>
						</div>
					</div>
				) : (
					<p class="rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-xs text-slate-600 dark:border-slate-800 dark:bg-slate-900/60 dark:text-slate-300">
						{t("home.legislatorActivity.empty")}
					</p>
				)}
			</section>

			<!-- 質詢 -->
			<section class="flex flex-col gap-3">
				<h3 class="text-lg font-semibold text-slate-800 dark:text-slate-100">
					{t("home.legislatorActivity.section.interpellations")}
				</h3>
				{interpellationList.length > 0 ? (
					<div class="relative" data-la-root>
						<div class="pointer-events-none absolute inset-y-0 left-0 w-10 bg-gradient-to-r from-white/90 to-transparent dark:from-slate-900/70"></div>
						<div class="pointer-events-none absolute inset-y-0 right-0 w-10 bg-gradient-to-l from-white/90 to-transparent dark:from-slate-900/70"></div>

						<div class="flex gap-2 md:gap-4 overflow-x-auto py-4 -my-4 scroll-smooth snap-x snap-mandatory" data-scroller>
							{interpellationList.map((item) => (
								item.url ? (
									<a
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent hover:border-primary/25 group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 transition-all hover:-translate-y-1 hover:shadow-lg md:p-4 dark:hover:translate-0"
										target="_blank"
										rel="noopener noreferrer"
										href={item.url}
										data-id={item.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{item.title}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{item.date ? formatDate(item.date) : ""}
											</p>
										</article>
									</a>
								) : (
									<div
										class="min-w-[270px] md:min-w-[320px] snap-start border-accent group relative flex flex-col items-start overflow-hidden rounded-xl border-2 p-0.5 shadow-black/5 md:p-4"
										data-id={item.id}
									>
										<article class="p-2 md:p-0">
											<h2 class="text-sm font-semibold md:text-lg">{item.title}</h2>
											<p class="text-xs tracking-tight text-gray-500 md:text-sm">
												{item.date ? formatDate(item.date) : ""}
											</p>
										</article>
									</div>
								)
							))}
						</div>

						<div class="absolute bottom-2 left-4 z-10">
							<div class="flex items-center gap-1 rounded-full bg-white/90 px-1.5 py-1 shadow-lg ring-1 ring-black/10 backdrop-blur dark:bg-slate-800/70">
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-left
									aria-label={t("post.prev")}
								>
									<span aria-hidden="true">←</span>
								</button>
								<div class="h-6 w-px bg-slate-300/70 dark:bg-slate-600/60" aria-hidden="true"></div>
								<button
									type="button"
									class="inline-flex h-8 w-8 items-center justify-center rounded-full text-slate-700 hover:bg-slate-100 disabled:cursor-not-allowed disabled:opacity-40 dark:text-slate-200 dark:hover:bg-slate-700/60"
									data-right
									aria-label={t("post.next")}
								>
									<span aria-hidden="true">→</span>
								</button>
							</div>
						</div>
					</div>
				) : (
					<p class="rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-xs text-slate-600 dark:border-slate-800 dark:bg-slate-900/60 dark:text-slate-300">
						{t("home.legislatorActivity.empty")}
					</p>
				)}
			</section>
		</div>
	)}
</section>

<script is:inline>
	(() => {
		const roots = document.querySelectorAll('[data-la-root]');
		roots.forEach((root) => {
			const scroller = root.querySelector('[data-scroller]');
			const left = root.querySelector('[data-left]');
			const right = root.querySelector('[data-right]');
			if (!scroller || !left || !right) return;

			const scrollEl = scroller;
			const leftBtn = left;
			const rightBtn = right;
			const amount = () => scrollEl.clientWidth * 0.9;

			function updateButtons() {
				const atStart = scrollEl.scrollLeft <= 0;
				const atEnd = Math.ceil(scrollEl.scrollLeft + scrollEl.clientWidth) >= scrollEl.scrollWidth - 1;
				leftBtn.disabled = atStart;
				rightBtn.disabled = atEnd;
			}

			leftBtn.addEventListener('click', () => {
				scrollEl.scrollBy({ left: -amount(), behavior: 'smooth' });
			});

			rightBtn.addEventListener('click', () => {
				scrollEl.scrollBy({ left: amount(), behavior: 'smooth' });
			});

			scrollEl.addEventListener('scroll', updateButtons, { passive: true });
			window.addEventListener('resize', updateButtons);
			updateButtons();
		});
	})();
</script>

<style>
	/* 隱藏各區塊的水平卷軸 */
	[data-la-root] [data-scroller] {
		-ms-overflow-style: none; /* IE 10+ */
		scrollbar-width: none; /* Firefox */
	}
	[data-la-root] [data-scroller]::-webkit-scrollbar {
		display: none; /* Chrome/Safari/Opera */
	}
</style>